"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Inhibitor = void 0;
const collection_data_1 = require("collection-data");
/**
 * Represent an inhibitor
 * @class
 * @abstract
 */
class Inhibitor {
    /**
     * @constructor
     * @param {ShewenyClient} client - The client
     * @param {string[]} customId - The different inhibitor customid
     */
    constructor(client, name, options) {
        this.type = ["MESSAGE_COMMAND"];
        this.priority = 0;
        this.client = client;
        this.name = name;
        this.type = options?.type || ["MESSAGE_COMMAND"];
        this.priority = options?.priority || 0;
    }
    /**
     * Unregister a inhibitor
     * @public
     * @returns {boolean}
     */
    unregister() {
        this.client.inhibitors?.delete(this.name);
        delete require.cache[require.resolve(this.path)];
        return true;
    }
    /**
     * Reload a inhibitor
     * @public
     * @async
     * @returns {Promise<Collection<string[], Inhibitor> | null>} The inhibitors collection
     */
    async reload() {
        if (this.path) {
            this.unregister();
            return this.register();
        }
        return null;
    }
    /**
     * Register a inhibitor
     * @public
     * @async
     * @returns {Collection<string[], Inhibitor>} The inhibitors collection
     */
    async register() {
        const Inhibitor = (await Promise.resolve().then(() => require(this.path))).default;
        const inhib = new Inhibitor(this.client);
        return this.client.inhibitors
            ? this.client.inhibitors.set(inhib.name, inhib)
            : new collection_data_1.Collection().set(inhib.name, inhib);
    }
}
exports.Inhibitor = Inhibitor;
