"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Event = void 0;
const collection_data_1 = require("collection-data");
/**
 * Represent a event
 * @class Event structure
 * @abstract
 */
class Event {
    /**
     * @constructor
     * @param {ShewenyClient} client - The client
     * @param {string} name - The name of the event
     * @param {IEventMeta} options - The options of the event
     */
    constructor(client, name, options) {
        this.description = "";
        this.once = false;
        this.client = client;
        this.name = name;
        this.description = options?.description || "";
        this.once = options?.once || false;
    }
    /**
     * Unregister a event
     * @public
     * @returns {boolean}
     */
    unregister() {
        this.client.events?.delete(this.name);
        delete require.cache[require.resolve(this.path)];
        return true;
    }
    /**
     * Reload a event
     * @public
     * @async
     * @returns {Promise<Collection<string, Event> | null>} The events collection
     */
    async reload() {
        if (this.path) {
            this.unregister();
            return this.register();
        }
        return null;
    }
    /**
     * Register a event
     * @public
     * @async
     * @returns {Promise<Collection<string, Event>>} The events collection
     */
    async register() {
        const event = (await Promise.resolve().then(() => require(this.path))).default;
        const evt = new event(this.client);
        return this.client.events
            ? this.client.events.set(evt.name, evt)
            : new collection_data_1.Collection().set(evt.name, evt);
    }
}
exports.Event = Event;
